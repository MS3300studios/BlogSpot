/*
import React, { Component } from 'react';
import axios from 'axios';

import classes from './chatMenu.module.css';
import getToken from '../../../getToken';
import Spinner from '../../../components/UI/spinner';
import UserPhoto from '../../../components/UI/userphoto';
import getUserData from '../../../getUserData';

class ConversationListItem extends Component {
    constructor(props) {
        super(props);

        const token = getToken();
        const userData = getUserData();

        this.state = {
            loading: true,
            user: null,
            token: token,
            userData: userData
        }
        this.chatSelect.bind(this);
    }

    componentDidMount(){
        if(this.props.el.conversationType === 'private'){
            let friend = this.props.el.participants.filter(participant => participant.userId !== this.state.userData._id)[0];

            axios({
                method: 'get',
                url: `http://localhost:3001/users/getUser/${friend.userId}`,
                headers: {'Authorization': this.state.token}
            })
            .then((res)=>{
                if(res.status===200){
                    console.log(res.data.user.surname)
                    this.setState({
                        loading: false,
                        user: res.data.user
                    })
                }
            })
            .catch(error => {
                console.log(error);
            })        
        }
    }

    chatSelect = () => {
        if(!this.props.join){
            this.props.selectChat(this.props.el)
        }
        else return null
    }

    render() { 
        /*let content = (
            <>
                <h1>{this.props.el.name}</h1>
                <div className={classes.participantContainer}>
                    {
                        this.props.el.participants.map((participant, index) => (
                            <p key={index}>{participant.name}</p>
                        ))
                    }
                </div>
            </>
        );
    
        if(this.props.el.conversationType === "private"){
            this.state.loading ? content = <Spinner darkgreen/> : (
                <>
                    <UserPhoto userId={this.state.user._id}/>
                    <h1>{this.state.user.name} {this.state.user.surname}</h1>
                </>
            )
        }*/
/*
        return (
            <div className={classes.conversation} onClick={this.chatSelect}>
                {
                    (this.props.el.conversationType === "private") ? (
                        <>
                            {
                                this.state.loading ? <Spinner darkgreen/> : (
                                    <>
                                        <UserPhoto userId={this.state.user._id}/>
                                        <h1>{this.state.user.name} {this.state.user.surname}</h1>
                                    </>
                                )
                            }
                        </>
                    ) : (
                        <>
                            <h1>{this.props.el.name}</h1>
                            <div className={classes.participantContainer}>
                                {
                                    this.props.el.participants.map((participant, index) => (
                                        <p key={index}>{participant.name}</p>
                                    ))
                                }
                            </div>
                        </>
                    )
                }
                {
                    this.props.join ? (
                        <div className={classes.joinButtonContainer}>
                            <div className={classes.joinButton} onClick={()=>this.props.join(this.props.el._id)}>join</div>
                        </div>
                    ) : null
                }
            </div>
        );
    }
}
 
export default ConversationListItem; 


*/